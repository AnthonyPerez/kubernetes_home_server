apiVersion: v1
kind: PersistentVolume
metadata:
  name: node201-nfs-pv
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: nfs-local-storage
  claimRef:
    name: node201-nfs-claim
    namespace: rook-nfs
  local:
    path: /mnt/hdd1/nfs/
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node201
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: node201-nfs-claim
  namespace: rook-nfs
spec:
  storageClassName: nfs-local-storage
  volumeName: node201-nfs-pv
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
---
apiVersion: nfs.rook.io/v1alpha1
kind: NFSServer
metadata:
  name: rook-nfs-201
  namespace: rook-nfs
spec:
  replicas: 1
  exports:
  - name: node201-share
    server:
      accessMode: ReadWrite
      squash: "none"
    # A Persistent Volume Claim must be created before creating NFS CRD instance.
    persistentVolumeClaim:
      claimName: node201-nfs-claim
  # A key/value list of annotations
  annotations:
    rook: nfs