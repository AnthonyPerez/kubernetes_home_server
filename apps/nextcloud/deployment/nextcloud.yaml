apiVersion: v1
kind: PersistentVolume
metadata:
  name: node202-nextcloud-pv
spec:
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: nextcloud-local-storage
  claimRef:
    name: nextcloud-pvc
    namespace: nextcloud
  local:
    path: /mnt/hdd1/nextcloud/
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node202
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-pvc
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  storageClassName: nextcloud-local-storage
  volumeName: node202-nextcloud-pv
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-db
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      pod-label: nextcloud-db-pod
  template:
    metadata:
      labels:
        pod-label: nextcloud-db-pod
    spec:
      containers:
      - name: mysql
        image: mariadb:10.5.9
        env:
        - name: MYSQL_DATABASE
          value: nextcloud
        envFrom:
        - secretRef:
            name: nextcloud-secrets
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/mysql
          subPath: db-data
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: nextcloud-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud-db
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  selector:
    pod-label: nextcloud-db-pod
  ports:
  - protocol: TCP
    port: 3306
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nextcloud-reverse-proxy-config
  namespace: nextcloud
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        server_name _;
        
        # Redirects http on this port to https on port 9002
        # Note that since the port in the request is being changed, we cannot use $http_host
        return 301 https://$host:9002$request_uri;
      }

      server {
        listen 443 ssl;
        ssl_certificate /etc/nginx/conf.d/cert.pem;
        ssl_certificate_key /etc/nginx/conf.d/key.pem;

        # This error page is reached when the server tried to access this port using http and redirects to https
        # Since we're already at the right port, $http_host (which inclused the host name and port) will work
        error_page 497 301 =307 https://$http_host$request_uri;
        
        location / {
          proxy_set_header    X-Forwarded-Proto $scheme;
          proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header    X-Real-IP $remote_addr;
          # This is important as it determines the host of redirects given by nextcloud
          proxy_set_header    Host $http_host;

          client_max_body_size 10G;
          proxy_request_buffering off;

          proxy_pass http://localhost:80;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-server
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      pod-label: nextcloud-server-pod
  template:
    metadata:
      labels:
        pod-label: nextcloud-server-pod
    spec:
      containers:
      - name: nextcloud
        image: nextcloud:21-apache
        env:
        - name: MYSQL_HOST
          value: nextcloud-db:3306
        - name: MYSQL_DATABASE
          value: nextcloud
        envFrom:
        - secretRef:
            name: nextcloud-secrets
        volumeMounts:
        - name: server-storage
          mountPath: /var/www/html
          subPath: server-data
      - name: nginx
        image: nginx:1.19-alpine
        volumeMounts:
          - name: config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: y
          - name: tls
            mountPath: /etc/nginx/conf.d/cert.pem
            subPath: cert.pem
            readOnly: y
          - name: tls
            mountPath: /etc/nginx/conf.d/key.pem
            subPath: key.pem
            readOnly: y
      volumes:
      - name: server-storage
        persistentVolumeClaim:
          claimName: nextcloud-pvc
      - name: config
        configMap:
          name: nextcloud-reverse-proxy-config
      - name: tls
        secret:
          secretName: nextcloud-tls
          items:
          - key: ssl_certificate
            path: cert.pem
          - key: ssl_certificate_key
            path: key.pem
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: nextcloud-cron
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  # Every two days at 3AM
  schedule: "0 3 */2 * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            pod-label: nextcloud-server-cron
        spec:
          containers:
          - name: nextcloud-cron
            image: nextcloud:21-apache
            command:
              - /cron.sh
            env:
            - name: MYSQL_HOST
              value: nextcloud-db:3306
            - name: MYSQL_DATABASE
              value: nextcloud
            envFrom:
            - secretRef:
                name: nextcloud-secrets
            volumeMounts:
              - name: server-storage
                mountPath: /var/www/html
                subPath: server-data
          restartPolicy: Never
          volumes:
          - name: server-storage
            persistentVolumeClaim:
              claimName: nextcloud-pvc
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: "app-sharing-key"
  name: nextcloud-rp-svc
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  selector:
    pod-label: nextcloud-server-pod
  type: LoadBalancer
  loadBalancerIP: 192.168.86.201
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      protocol: TCP
      port: 9001
      targetPort: 8080
    - name: https
      protocol: TCP
      port: 9002
      targetPort: 443
