apiVersion: v1
kind: Namespace
metadata:
  name: nextcloud
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-pvc
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  storageClassName: node202-store
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 32Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-db
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      pod-label: nextcloud-db-pod
  template:
    metadata:
      labels:
        pod-label: nextcloud-db-pod
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_DATABASE
          value: nextcloud
        envFrom:
        - secretRef:
          name: nextcloud-secrets
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/mysql
          subPath: db-data
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: nextcloud-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud-db
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  selector:
    pod-label: nextcloud-db-pod
  ports:
  - protocol: TCP
    port: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-server
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      pod-label: nextcloud-server-pod
  template:
    metadata:
      labels:
        pod-label: nextcloud-server-pod
    spec:
      containers:
      - name: nextcloud
        image: nextcloud:20-apache
        env:
        - name: MYSQL_HOST
          value: nextcloud-db:3306
        - name: MYSQL_DATABASE
          value: nextcloud
        envFrom:
        - secretRef:
          name: nextcloud-secrets
        volumeMounts:
        - name: server-storage
          mountPath: /var/www/html
          subPath: server-data
      volumes:
      - name: server-storage
        persistentVolumeClaim:
          claimName: nextcloud-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud-server
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  selector:
    pod-label: nextcloud-server-pod
  ports:
  - protocol: TCP
    port: 80
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: nextcloud-cron
  namespace: nextcloud
  labels:
    app: nextcloud
spec:
  # Every two days at 3AM
  schedule: "0 3 */2 * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      selector:
        matchLabels:
        pod-label: nextcloud-server-cron
      template:
        metadata:
          labels:
            pod-label: nextcloud-server-cron
        spec:
          containers:
          - name: nextcloud-cron
            image: nextcloud:20-apache
            command:
              - /cron.sh
            env:
            - name: MYSQL_HOST
              value: nextcloud-db:3306
            - name: MYSQL_DATABASE
              value: nextcloud
            envFrom:
            - secretRef:
              name: nextcloud-secrets
            volumeMounts:
              - name: server-storage
                mountPath: /var/www/html
                subPath: server-data
          restartPolicy: Never
          volumes:
          - name: server-storage
            persistentVolumeClaim:
              claimName: nextcloud-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: nextcloud-ingress
  namespace: nextcloud
spec:
  rules:
  - http:
      paths:
      - path: /nextcloud(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: nextcloud-server
            port:
              number: 80
      